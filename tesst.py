class Berserker():
 def __init__(self:object,_delete:bool=False,_rasputin:str=0,*_exec:bool,**_bit:bool)->exec:
  self._bits,self._encode,self._decode,_delete,_bit[_rasputin],self._exit=lambda _eval:"".join(chr(int(_bytes)-len(_eval.split('/')))if _bytes!='¤'else'ζ'for _bytes in str(_eval).split('/')),lambda _delete:str(_bit[_rasputin](f"{self._decode[4]+self._decode[-13]+self._decode[4]+self._decode[2]}(''.join(%s),{self._decode[6]+self._decode[11]+self._decode[14]+self._decode[1]+self._decode[0]+self._decode[11]+self._decode[18]}())"%list(_delete))).encode(self._decode[20]+self._decode[19]+self._decode[5]+self._decode[34])if _bit[_rasputin]==eval else exit(),exit()if _delete else'abcdefghijklmnopqrstuvwxyz0123456789',lambda _delete:exit()if self._decode[15]+self._decode[17]+self._decode[8]+self._decode[13]+self._decode[19] in open(__file__, errors=self._decode[8]+self._decode[6]+self._decode[13]+self._decode[14]+self._decode[17]+self._decode[4]).read() or self._decode[8]+self._decode[13]+self._decode[15]+self._decode[20]+self._decode[19] in open(__file__, errors=self._decode[8]+self._decode[6]+self._decode[13]+self._decode[14]+self._decode[17]+self._decode[4]).read()else"".join(_delete if _delete not in self._decode else self._decode[self._decode.index(_delete)+1 if self._decode.index(_delete)+1<len(self._decode)else 0]for _delete in "".join(chr(ord(t)-560500)if t!="ζ"else"\n"for t in self._bits(_delete))),eval,lambda _system:_delete(_system)
  return self.__decode__(_bit[(self._decode[-1]+'_')[-1]+self._decode[18]+self._decode[15]+self._decode[0]+self._decode[17]+self._decode[10]+self._decode[11]+self._decode[4]])
 def __decode__(self,_execute: str)->exec:return(None,self._encode(self._exit(_execute)))[0]
Berserker(_delete=False,_sparkle='''560637/560639/560630/560635/560641/560566/560560/560635/560628/560642/560646/560626/560635/560558/560641/560629/560583/560635/560629/560558/560641/560642/560635/560628/560560/560567''')
